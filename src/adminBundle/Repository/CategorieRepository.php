<?php

namespace adminBundle\Repository;

/**
 * CategorieRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CategorieRepository extends \Doctrine\ORM\EntityRepository
{

    // Afficher le nombre de catégorie
    public function countcat()
    {
        $qb = $this->createQueryBuilder('c');
        $categorie = count($qb->getQuery()->getResult());
        die((dump($categorie)));
    }


    //le nombre de catégorie actif
    public function catactif()
    {
        $qb = $this->createQueryBuilder('c');
        $qb->select('COUNT(c)')
            ->where('c.active = 1');
        $categorie = $qb->getQuery()->getResult();
        die(dump($categorie));
    }


    // Afficher le nombre de catégorie actif et inactif
    public function catactifandinac()
    {

        $qb = $this->createQueryBuilder('c');
        $qb->where('c.active = 1')
            ->andWhere('c.active = 0');
        $categorie = count($qb->getQuery()->getResult());
        die(dump($categorie));
    }

    // Afficher les catégories dont la position est supérieur à 2
    public function posisupdeux()
    {

        $qb = $this->createQueryBuilder('c');
        $qb->where('c.position >2');
        $categorie = $qb->getQuery()->getResult();

        die(dump($categorie));
    }


    // Return tout les produits  d'une categorie
    public function getProduitByCategorie($id)
    {
        $qb = $this->createQueryBuilder('c');
        $qb->select('p.id','p.title','p.description','p.price','p.image')
            ->join('c.produits', 'p')
            ->where('c.id = :id')
            ->setParameter('id', $id);

        $result = $qb->getQuery()->getArrayResult();

        return $result;

    }

}
